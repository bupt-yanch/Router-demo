[{"G:\\ych\\front-dev\\myapp\\src\\index.js":"1","G:\\ych\\front-dev\\myapp\\src\\Smile.js":"2","G:\\ych\\front-dev\\myapp\\src\\Home.js":"3","G:\\ych\\front-dev\\myapp\\src\\Settings.js":"4","G:\\ych\\front-dev\\myapp\\src\\RandomShow.js":"5","G:\\ych\\front-dev\\myapp\\src\\App.js":"6"},{"size":293,"mtime":1616592568178,"results":"7","hashOfConfig":"8"},{"size":283,"mtime":1616590673712,"results":"9","hashOfConfig":"8"},{"size":280,"mtime":1616591208028,"results":"10","hashOfConfig":"8"},{"size":795,"mtime":1616591495304,"results":"11","hashOfConfig":"8"},{"size":370,"mtime":1616591398603,"results":"12","hashOfConfig":"8"},{"size":2298,"mtime":1616592479382,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14gbajs",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"G:\\ych\\front-dev\\myapp\\src\\index.js",[],"G:\\ych\\front-dev\\myapp\\src\\Smile.js",[],"G:\\ych\\front-dev\\myapp\\src\\Home.js",[],"G:\\ych\\front-dev\\myapp\\src\\Settings.js",["28"],"G:\\ych\\front-dev\\myapp\\src\\RandomShow.js",[],"G:\\ych\\front-dev\\myapp\\src\\App.js",["29","30","31","32","33","34","35"],"import { Layout, Menu, Breadcrumb } from 'antd';\r\nimport {\r\n    HomeOutlined,\r\n    SettingFilled,\r\n    SmileOutlined,\r\n} from '@ant-design/icons';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport {HashRouter as Router, Link, Route} from 'react-router-dom';\r\nimport Smile from './Smile';\r\nimport Settings from './Settings';\r\nimport RandomShow from './RandomShow';\r\nimport 'antd/dist/antd.css';\r\nconst { Component } = require(\"react\");\r\n\r\nconst { Sider } = Layout;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    collapsed: false,\r\n    menuKey: ['1'],\r\n  };\r\n\r\n  componentDidMount() {\r\n      this.props.history.listen(route => {\r\n          const pathName = route.pathname;\r\n          console.log(pathName)\r\n          let key = '1';\r\n          if (pathName.startsWith(\"/smile\")) {\r\n              key = '2';\r\n          } else if (pathName.startsWith(\"/settings\")) {\r\n              key = '3';\r\n          }\r\n          this.setState({\r\n              menuKey: [key]\r\n          })\r\n      })\r\n  }\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\" selectedKeys={this.state.menuKey}>\r\n            <Menu.Item key='1' icon={<HomeOutlined/>}>\r\n                Home\r\n                <Link to=\"/\"/>\r\n            </Menu.Item>\r\n            <Menu.Item key='2' icon={<SmileOutlined/>}>\r\n                Smile\r\n                <Link to=\"/smile\"/>\r\n            </Menu.Item>\r\n            <Menu.Item key='3' icon={<SettingFilled/>}>\r\n                Settings\r\n                <Link to=\"/settings\"/>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n            <Router>\r\n                <Route path=\"/\" exact component={Home}/>\r\n                <Route path=\"/smile\" exact component={Smile}/>\r\n                <Route path=\"/settings\" exact component={Settings}/>\r\n                <Route path=\"/settings/:id\" exact component={RandomShow}/>\r\n            </Router>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;",["36","37"],{"ruleId":"38","severity":1,"message":"39","line":5,"column":10,"nodeType":"40","messageId":"41","endLine":5,"endColumn":20},{"ruleId":"38","severity":1,"message":"42","line":8,"column":3,"nodeType":"40","messageId":"41","endLine":8,"endColumn":15},{"ruleId":"38","severity":1,"message":"43","line":9,"column":3,"nodeType":"40","messageId":"41","endLine":9,"endColumn":18},{"ruleId":"38","severity":1,"message":"44","line":14,"column":23,"nodeType":"40","messageId":"41","endLine":14,"endColumn":29},{"ruleId":"38","severity":1,"message":"45","line":14,"column":31,"nodeType":"40","messageId":"41","endLine":14,"endColumn":36},{"ruleId":"38","severity":1,"message":"46","line":15,"column":8,"nodeType":"40","messageId":"41","endLine":15,"endColumn":12},{"ruleId":"38","severity":1,"message":"47","line":16,"column":8,"nodeType":"40","messageId":"41","endLine":16,"endColumn":13},{"ruleId":"38","severity":1,"message":"48","line":17,"column":8,"nodeType":"40","messageId":"41","endLine":17,"endColumn":16},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'SyncOutlined' is defined but never used.","'LoadingOutlined' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Home' is defined but never used.","'Smile' is defined but never used.","'Settings' is defined but never used.","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-global-assign","no-unsafe-negation"]